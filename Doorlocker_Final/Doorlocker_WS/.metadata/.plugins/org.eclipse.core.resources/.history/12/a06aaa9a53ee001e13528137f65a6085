/*
 * Module: uart
 *
 * File Name: uart.h
 *
 *Description : Header file for UART driver
 *
 * Author: Mohamed Ismail
 *
 */
#ifndef MCAL_UART_UART_H_
#define MCAL_UART_UART_H_

#include "../../LIBRARY/std_types.h"


typedef enum {
	_1BaudRate = 2400,
	_2BaudRate = 4800,
	_3BaudRate = 9600,
	_4BaudRate = 14400,
	_5BaudRate = 19200,
	_6BaudRate = 28800,
	_7BaudRate = 38400,
	_8BaudRate = 57600,
	_9BaudRate = 76800,
	_10BaudRate = 115200
} UART_BaudRate;
typedef enum {
	_5BIT, _6BIT, _7BIT, _8BIT
} UART_BitData;

typedef enum {
	DISABLED, RESERVED, EVEN, ODD
} UART_Parity;

typedef enum {
	ONE, TWO
} UART_StopBit;

typedef struct {
	UART_BitData 	bit_data;
	UART_Parity 	parity;
	UART_StopBit 	stop_bit;
	UART_BaudRate 	baud_rate;
}UART_ConfigType;


/*******************************************************************************
 *                      Functions Prototypes                                   *
 *******************************************************************************/


void UART_init(const UART_ConfigType *Config_Ptr);

/*
 * Description :
 * Functional responsible for send byte to another UART device.
 */
void UART_sendByte(const uint8 data);

/*
 * Description :
 * Functional responsible for receive byte from another UART device.
 */
uint8 UART_recieveByte(void);
/*
 * Description :
 * Send the required string through UART to the other UART device.
 */
void UART_sendString(const uint8 *Str);

/*
 * Description :
 * Receive the required string until the '#' symbol through UART from the other UART device.
 */
void UART_receiveString(uint8 *Str); // Receive until #

#endif

